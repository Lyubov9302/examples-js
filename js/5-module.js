// 1 - 
// const numbers = [5, 10, 15, 20, 25];

// // –ö–ª–∞—Å–∏—á–Ω–∏–π for
// // for (let i = 0; i < numbers.length; i += 1) {
// //   console.log(`Index ${i}, value ${numbers[i]}`);
// // }

// // –ü–µ—Ä–µ–±–∏—Ä–∞—é—á–∏–π –º–µ—Ç–æ–¥ forEach
// numbers.forEach(function (number, index) {
//   console.log(`Index ${index}, value ${number}`);
// });

// 2 - forEach

// getLongWords(words, minLength) 

// –°—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ—é getLongWords(words, minLength), —è–∫–∞ –ø—Ä–∏–π–º–∞—î:
// - words - –º–∞—Å–∏–≤ —Å–ª—ñ–≤ (—Ä—è–¥–∫—ñ–≤),
// - minLength - –º—ñ–Ω—ñ–º–∞–ª—å–Ω—É –¥–æ–≤–∂–∏–Ω—É —Å–ª–æ–≤–∞

// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ–≤–µ—Ä–Ω—É—Ç–∏ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, 
// –¥–æ —è–∫–æ–≥–æ –ø–æ—Ç—Ä–∞–ø–ª—è—é—Ç—å –ª–∏—à–µ —Ç—ñ —Å–ª–æ–≤–∞, 
// –¥–æ–≤–∂–∏–Ω–∞ —è–∫–∏—Ö —Å—Ç—Ä–æ–≥–æ –±—ñ–ª—å—à–∞ –∑–∞ minLength.

function getLongWords(words, minLength)  {
    newArr = [];
    words.forEach( function (word) {
        if(word.length > minLength ) {
            newArr.push(word);
        }
    })

    return newArr;
}

console.log(getLongWords(["apple", "hi", "sunshine", "no", "javascript"], 4));
// üëâ ["apple", "sunshine", "javascript"]

console.log(getLongWords(["cat", "dog", "horse", "elephant"], 5));
// üëâ ["elephant"]

// 3 - –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –∑–≤–∏—á–∞–π–Ω–æ—ó –∞–Ω–æ–Ω—ñ–º–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó —ñ —Å—Ç—Ä—ñ–ª–æ—á–Ω–æ—ó –∞–Ω–æ–Ω—ñ–º–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó

// const numbers = [5, 10, 15, 20, 25];

// // –ó–≤–∏—á–∞–π–Ω–∞ –∞–Ω–æ–Ω—ñ–º–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
// numbers.forEach(function (number, index) {
//   console.log(`Index ${index}, value ${number}`);
// });

// // –°—Ç—Ä—ñ–ª–æ—á–Ω–∞ –∞–Ω–æ–Ω—ñ–º–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
// numbers.forEach((number, index) => {
//   console.log(`Index ${index}, value ${number}`);
// });


// 4 - —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∑–≤–∏—á–∞–π–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞ —Å—Ç—Ä—ñ–ª–æ—á–Ω—É

// –ü–µ—Ä–µ–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculateTotalLength, 
// —è–∫–∞ —Ä–∞—Ö—É—î –∑–∞–≥–∞–ª—å–Ω—É –¥–æ–≤–∂–∏–Ω—É —É—Å—ñ—Ö —Å–ª—ñ–≤ —É –º–∞—Å–∏–≤—ñ

// –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π - —Å—Ç—Ä—ñ–ª–æ—á–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è calculateTotalLength
// - —Å—Ç—Ä—ñ–ª–æ—á–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫ –∫–æ–ª–±–µ–∫ —É forEach

// function calculateTotalLength(words) {
//     let total = 0;
  
//     words.forEach(function(word) {
//       total += word.length;
//     });
  
//     return total;
//   }


//   –ó–º—ñ–Ω–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è 

const calculateTotalLength = (words) => {
    let total = 0;

    words.forEach((word) => {
        total += word.length;
      });
    
      return total;
}

console.log(calculateTotalLength(["apple", "banana", "kiwi"])); // –ø–æ–≤–µ—Ä—Ç–∞—î 15
console.log(calculateTotalLength(["hi", "world"]));             // –ø–æ–≤–µ—Ä—Ç–∞—î 7



// 5 - —Ñ—É–Ω–∫—Ü—ñ—è –∑ –ø–æ–±—ñ—á–Ω–∏–º–∏ –µ—Ñ–µ–∫—Ç–∞–º–∏

// const dirtyMultiply = (array, value) => {
//     for (let i = 0; i < array.length; i += 1) {
//       array[i] = array[i] * value;
//     }
//   };
  
//   const numbers = [1, 2, 3, 4, 5];
//   dirtyMultiply(numbers, 2);
//   // –í—ñ–¥–±—É–ª–∞—Å—è –º—É—Ç–∞—Ü—ñ—è –≤–∏—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö - –º–∞—Å–∏–≤—É numbers
//   console.log(numbers); // [2, 4, 6, 8, 10]

//   6 - —á–∏—Å—Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—è 
  
// const pureMultiply = (array, value) => {
//     const newArray = [];
  
//     array.forEach(element => {
//       newArray.push(element * value);
//     });
  
//     return newArray;
//   };
  
//   const numbers = [1, 2, 3, 4, 5];
//   const doubledNumbers = pureMultiply(numbers, 2);
  
//   // –ú—É—Ç–∞—Ü—ñ—è –≤–∏—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö –Ω–µ –≤—ñ–¥–±—É–ª–∞—Å—è
//   console.log(numbers); // [1, 2, 3, 4, 5]
//   // –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä–Ω—É–ª–∞ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑—ñ –∑–º—ñ–Ω–µ–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
//   console.log(doubledNumbers); // [2, 4, 6, 8, 10]

// 7 - –§—É–Ω–∫—Ü—ñ—è changeEven(numbers, value) –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª 
// numbers —ñ –æ–Ω–æ–≤–ª—é—î –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç, 
// –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–æ–≥–æ - —Ü–µ –ø–∞—Ä–Ω–µ —á–∏—Å–ª–æ, 
// –¥–æ–¥–∞—é—á–∏ –¥–æ –Ω—å–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ value, —è–∫–∏–π —Ç–æ—á–Ω–æ —î —á–∏—Å–ª–æ–º.

// –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º,
// —â–æ–± –≤–æ–Ω–∞ —Å—Ç–∞–ª–∞ —á–∏—Å—Ç–æ—é - –Ω–µ –∑–º—ñ–Ω—é–≤–∞–ª–∞ –º–∞—Å–∏–≤ —á–∏—Å–µ–ª numbers,
//  –∞ —Å—Ç–≤–æ—Ä—é–≤–∞–ª–∞, –Ω–∞–ø–æ–≤–Ω—é–≤–∞–ª–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∑ 
//  –æ–Ω–æ–≤–ª–µ–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏.

// function changeEven(numbers, value) {
//     const newArray = [];
  
//       numbers.forEach((number) => {
//         if(number % 2 === 0) {
//       newArray.push(number + value);
//         } else {
//           newArray.push(number);
//         }
//     });
//     return newArray;
//   };


//   console.log(changeEven([1, 2, 3, 4, 5], 10)); //[1, 12, 3, 14, 5]
  
// // 7 - b
// changeOdd(numbers, value)

// –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞:
// - –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª numbers —ñ —á–∏—Å–ª–æ value
// - —Å—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤
// - –∑–º—ñ–Ω—é—î –Ω–µ–ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞, –¥–æ–¥–∞—é—á–∏ –¥–æ –Ω–∏—Ö value
// - –ø–∞—Ä–Ω—ñ - –∑–∞–ª–∏—à–∞—î –±–µ–∑ –∑–º—ñ–Ω—é—î
// - –Ω–µ –∑–º—ñ–Ω—é—î –≤–∏—Ö—ñ–¥–Ω–∏–π –º–∞—Å–∏–≤


// function changeOdd(numbers, value) {
// let newArray = [];

// numbers.forEach((number) => {
//     if(number % 2 !== 0) {
//         newArray.push(number + value);
//     } else {
//         newArray.push(number);
//     }
// });
// return newArray;
// }

// console.log(changeOdd([1, 2, 3, 4, 5], 10));
// // –ü–æ–≤–µ—Ä—Ç–∞—î: [11, 2, 13, 4, 15])

// 8 - –ú–µ—Ç–æ–¥ map()

// const planets = ["Earth", "Mars", "Venus", "Jupiter"];

// const planetsInUpperCase = planets.map(planet => planet.toUpperCase());
// console.log(planetsInUpperCase); // ["EARTH", "MARS", "VENUS", "JUPITER"]

// const planetsInLowerCase = planets.map(planet => planet.toLowerCase());
// console.log(planetsInLowerCase); // ["earth", "mars", "venus", "jupiter"]

// // –û—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π –º–∞—Å–∏–≤ –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è
// console.log(planets); // ["Earth", "Mars", "Venus", "Jupiter"]

// 9 - –í –º–∞—Å–∏–≤—ñ planets –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è –Ω–∞–∑–≤–∏ –ø–ª–∞–Ω–µ—Ç.
//  –î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—ñ–π planetsLengths –≤–∏–π—à–æ–≤ –º–∞—Å–∏–≤, 
//  —â–æ –±—É–¥–µ —Å–∫–ª–∞–¥–∞—Ç–∏—Å—è –∑ –¥–æ–≤–∂–∏–Ω –Ω–∞–∑–≤ –∫–æ–∂–Ω–æ—ó –ø–ª–∞–Ω–µ—Ç–∏ –∑ –º–∞—Å–∏–≤—É planets.
//   –û–±–æ–≤'—è–∑–∫–æ–≤–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–µ—Ç–æ–¥ map().

const planets = ["Earth", "Mars", "Venus", "Jupiter"];

const planetsLengths = planets.map(planet => planet.length);

// 10 - –º–∞—Å–∏–≤ –æ–±—î–∫—Ç—ñ–≤ 

// const students = [
//     { name: "Mango", score: 83 },
//     { name: "Poly", score: 59 },
//     { name: "Ajax", score: 37 },
//     { name: "Kiwi", score: 94 },
//     { name: "Houston", score: 64 },
//   ];
  
//   const names = students.map(student => student.name);
//   console.log(names); // ["Mango", "Poly", "Ajax", "Kiwi", "Houston"]

//   11 - –ú–µ—Ç–æ–¥ flatMap()

const students = [
    { name: "Mango", courses: ["mathematics", "physics"] },
    { name: "Poly", courses: ["science", "mathematics"] },
    { name: "Kiwi", courses: ["physics", "biology"] },
  ];
  
  const mappedCourses = students.map(student => student.courses);
  console.log(mappedCourses) // [["mathematics", "physics"], ["science", "mathematics"], ["physics", "biology"]]
  
  const flattenedCourses = students.flatMap(student => student.courses);
  console.log(flattenedCourses) // ["mathematics", "physics", "science", "mathematics", "physics", "biology"];
  

  



